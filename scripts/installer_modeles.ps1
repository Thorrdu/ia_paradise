# Script d'installation des mod√®les IA optimis√©s pour Paradis IA V2
# Configuration cible : RTX 4060, 32-64 Go RAM

Write-Host "üöÄ Installation des mod√®les IA pour le Paradis IA V2" -ForegroundColor Cyan
Write-Host "Configuration cible : RTX 4060, 32-64 Go RAM" -ForegroundColor Yellow

# V√©rifier si Ollama est install√©
if (-not (Get-Command ollama -ErrorAction SilentlyContinue)) {
    Write-Host "‚ùå Ollama n'est pas install√©. Veuillez d'abord ex√©cuter le script setup_environment.ps1" -ForegroundColor Red
    Exit
}

# Menu principal
function Show-Menu {
    Write-Host "`n=== üß† INSTALLATION DES MOD√àLES IA ===" -ForegroundColor Cyan
    Write-Host "1. Installer tous les mod√®les recommand√©s (~ 30 Go)" -ForegroundColor White
    Write-Host "2. Installer uniquement Mixtral 8x7B optimis√© (~ 9 Go)" -ForegroundColor White
    Write-Host "3. Installer uniquement DeepSeek Coder (~ 7 Go)" -ForegroundColor White
    Write-Host "4. Installer uniquement Phi-3 Mini (~ 2 Go)" -ForegroundColor White
    Write-Host "5. Cr√©er un mod√®le personnalis√©" -ForegroundColor White
    Write-Host "6. Quitter" -ForegroundColor White
    Write-Host "===================================" -ForegroundColor Cyan
    
    $choice = Read-Host "Choisissez une option (1-6)"
    
    switch ($choice) {
        "1" { Install-AllModels; Show-Menu }
        "2" { Install-MixtralOptimized; Show-Menu }
        "3" { Install-DeepSeekCoder; Show-Menu }
        "4" { Install-Phi3Mini; Show-Menu }
        "5" { Create-CustomModel; Show-Menu }
        "6" { 
            Write-Host "`nüéâ Installation des mod√®les termin√©e!" -ForegroundColor Green
            Exit
        }
        default { 
            Write-Host "‚ùå Option invalide, veuillez r√©essayer." -ForegroundColor Red
            Show-Menu
        }
    }
}

# Fonction pour installer tous les mod√®les recommand√©s
function Install-AllModels {
    Write-Host "`n‚¨áÔ∏è Installation de tous les mod√®les recommand√©s..." -ForegroundColor Cyan
    Write-Host "‚ö†Ô∏è Cette op√©ration n√©cessite environ 30 Go d'espace disque" -ForegroundColor Yellow
    Write-Host "Temps d'installation estim√© : 15-30 minutes selon votre connexion" -ForegroundColor Yellow
    
    $confirm = Read-Host "Confirmer l'installation de tous les mod√®les? (O/N) [O]"
    
    if ($confirm -ne "N" -and $confirm -ne "n") {
        # Mixtral 8x7B (Optimis√©)
        Install-MixtralOptimized
        
        # DeepSeek Coder
        Install-DeepSeekCoder
        
        # Phi-3 Mini
        Install-Phi3Mini
        
        # Mod√®les suppl√©mentaires
        Write-Host "`n‚¨áÔ∏è Installation de CodeLlama 34B (quantifi√©)..." -ForegroundColor Yellow
        ollama pull codellama:34b-instruct-q5_K_M
        
        Write-Host "`n‚¨áÔ∏è Installation de Dolphin Mixtral..." -ForegroundColor Yellow
        ollama pull dolphin-mixtral
        
        Write-Host "‚úÖ Tous les mod√®les ont √©t√© install√©s avec succ√®s!" -ForegroundColor Green
    }
}

# Fonction pour installer Mixtral optimis√©
function Install-MixtralOptimized {
    Write-Host "`n‚¨áÔ∏è Installation de Mixtral 8x7B optimis√© pour RTX 4060..." -ForegroundColor Yellow
    
    # V√©rifier si le fichier modelfile existe, sinon le cr√©er
    $modelfilePath = "..\modeles\modelfiles\mixtral-optimized"
    
    if (-not (Test-Path $modelfilePath)) {
        Write-Host "Cr√©ation du fichier de mod√®le optimis√© pour la RTX 4060..." -ForegroundColor Yellow
        
        @"
FROM mixtral
PARAMETER num_ctx 16384
PARAMETER num_gpu 1
PARAMETER num_thread 8
PARAMETER temperature 0.7
PARAMETER repeat_penalty 1.1
PARAMETER stop "<|im_end|>"
PARAMETER stop "</answer>"
"@ | Out-File -FilePath $modelfilePath -Force
        
        Write-Host "‚úÖ Fichier de mod√®le cr√©√© avec succ√®s" -ForegroundColor Green
    }
    
    # T√©l√©charger Mixtral base s'il n'est pas d√©j√† pr√©sent
    $ollamaList = ollama list
    
    if (-not ($ollamaList -match "mixtral:latest")) {
        Write-Host "‚¨áÔ∏è T√©l√©chargement du mod√®le Mixtral base..." -ForegroundColor Yellow
        ollama pull mixtral
    }
    
    # Cr√©er le mod√®le optimis√©
    Write-Host "‚öôÔ∏è Cr√©ation du mod√®le Mixtral optimis√© pour la RTX 4060..." -ForegroundColor Yellow
    ollama create mixtral-optimized -f $modelfilePath
    
    Write-Host "‚úÖ Mixtral optimis√© a √©t√© install√© avec succ√®s!" -ForegroundColor Green
    Write-Host "Pour utiliser ce mod√®le: ollama run mixtral-optimized" -ForegroundColor Green
}

# Fonction pour installer DeepSeek Coder
function Install-DeepSeekCoder {
    Write-Host "`n‚¨áÔ∏è Installation de DeepSeek Coder (mod√®le de programmation)..." -ForegroundColor Yellow
    
    # V√©rifier si DeepSeek Coder est d√©j√† install√©
    $ollamaList = ollama list
    
    if (-not ($ollamaList -match "deepseek-coder")) {
        Write-Host "‚¨áÔ∏è T√©l√©chargement de DeepSeek Coder quantifi√©..." -ForegroundColor Yellow
        ollama pull deepseek-coder:33b-instruct-q5_K_M
    } else {
        Write-Host "‚úÖ DeepSeek Coder est d√©j√† install√©" -ForegroundColor Green
    }
    
    Write-Host "‚úÖ DeepSeek Coder a √©t√© install√© avec succ√®s!" -ForegroundColor Green
    Write-Host "Pour utiliser ce mod√®le: ollama run deepseek-coder:33b-instruct-q5_K_M" -ForegroundColor Green
}

# Fonction pour installer Phi-3 Mini
function Install-Phi3Mini {
    Write-Host "`n‚¨áÔ∏è Installation de Phi-3 Mini (mod√®le l√©ger de Microsoft)..." -ForegroundColor Yellow
    
    # V√©rifier si Phi-3 Mini est d√©j√† install√©
    $ollamaList = ollama list
    
    if (-not ($ollamaList -match "phi3:mini")) {
        Write-Host "‚¨áÔ∏è T√©l√©chargement de Phi-3 Mini..." -ForegroundColor Yellow
        ollama pull phi3:mini
    } else {
        Write-Host "‚úÖ Phi-3 Mini est d√©j√† install√©" -ForegroundColor Green
    }
    
    Write-Host "‚úÖ Phi-3 Mini a √©t√© install√© avec succ√®s!" -ForegroundColor Green
    Write-Host "Pour utiliser ce mod√®le: ollama run phi3:mini" -ForegroundColor Green
}

# Fonction pour cr√©er un mod√®le personnalis√©
function Create-CustomModel {
    Write-Host "`nüîß Cr√©ation d'un mod√®le personnalis√©..." -ForegroundColor Cyan
    
    # Demander le mod√®le base
    Write-Host "`nMod√®les de base disponibles:" -ForegroundColor Yellow
    Write-Host "1. mixtral (recommand√© pour t√¢ches g√©n√©rales)" -ForegroundColor White
    Write-Host "2. llama3 (mod√®le Meta r√©cent)" -ForegroundColor White
    Write-Host "3. deepseek-coder (sp√©cialis√© programmation)" -ForegroundColor White
    Write-Host "4. phi3:mini (l√©ger et rapide)" -ForegroundColor White
    Write-Host "5. Autre (sp√©cifier)" -ForegroundColor White
    
    $baseModelChoice = Read-Host "Choisissez un mod√®le de base (1-5)"
    
    switch ($baseModelChoice) {
        "1" { $baseModel = "mixtral" }
        "2" { $baseModel = "llama3" }
        "3" { $baseModel = "deepseek-coder" }
        "4" { $baseModel = "phi3:mini" }
        "5" { 
            $baseModel = Read-Host "Entrez le nom du mod√®le de base"
            # V√©rifier si le mod√®le est disponible, sinon proposer de le t√©l√©charger
            $ollamaList = ollama list
            if (-not ($ollamaList -match $baseModel)) {
                $downloadModel = Read-Host "Ce mod√®le n'est pas disponible localement. Voulez-vous le t√©l√©charger? (O/N) [O]"
                if ($downloadModel -ne "N" -and $downloadModel -ne "n") {
                    ollama pull $baseModel
                }
            }
        }
        default { 
            Write-Host "‚ùå Option invalide, utilisation de mixtral par d√©faut." -ForegroundColor Red
            $baseModel = "mixtral" 
        }
    }
    
    # Demander le nom du mod√®le personnalis√©
    $customModelName = Read-Host "Entrez un nom pour votre mod√®le personnalis√©"
    
    if ([string]::IsNullOrEmpty($customModelName)) {
        $customModelName = "$baseModel-custom"
        Write-Host "Utilisation du nom par d√©faut: $customModelName" -ForegroundColor Yellow
    }
    
    # Demander les param√®tres
    Write-Host "`nConfiguration des param√®tres du mod√®le (appuyez sur Entr√©e pour utiliser les valeurs par d√©faut)" -ForegroundColor Yellow
    
    $numCtx = Read-Host "Taille du contexte (4096-32768) [16384]"
    if ([string]::IsNullOrEmpty($numCtx)) { $numCtx = "16384" }
    
    $numGpu = Read-Host "Nombre de GPU √† utiliser (0-1) [1]"
    if ([string]::IsNullOrEmpty($numGpu)) { $numGpu = "1" }
    
    $numThread = Read-Host "Nombre de threads CPU (4-16) [8]"
    if ([string]::IsNullOrEmpty($numThread)) { $numThread = "8" }
    
    $temperature = Read-Host "Temp√©rature (0.1-1.0) [0.7]"
    if ([string]::IsNullOrEmpty($temperature)) { $temperature = "0.7" }
    
    $repeatPenalty = Read-Host "P√©nalit√© de r√©p√©tition (1.0-1.5) [1.1]"
    if ([string]::IsNullOrEmpty($repeatPenalty)) { $repeatPenalty = "1.1" }
    
    # Cr√©er le fichier de mod√®le personnalis√©
    $customModelfilePath = "..\modeles\modelfiles\$customModelName"
    
    @"
FROM $baseModel
PARAMETER num_ctx $numCtx
PARAMETER num_gpu $numGpu
PARAMETER num_thread $numThread
PARAMETER temperature $temperature
PARAMETER repeat_penalty $repeatPenalty
PARAMETER stop "<|im_end|>"
PARAMETER stop "</answer>"
"@ | Out-File -FilePath $customModelfilePath -Force
    
    Write-Host "‚úÖ Fichier de mod√®le personnalis√© cr√©√© avec succ√®s" -ForegroundColor Green
    
    # Cr√©er le mod√®le
    Write-Host "‚öôÔ∏è Cr√©ation du mod√®le personnalis√© $customModelName..." -ForegroundColor Yellow
    ollama create $customModelName -f $customModelfilePath
    
    Write-Host "‚úÖ Mod√®le personnalis√© $customModelName cr√©√© avec succ√®s!" -ForegroundColor Green
    Write-Host "Pour utiliser ce mod√®le: ollama run $customModelName" -ForegroundColor Green
}

# V√©rifier la configuration recommand√©e
Write-Host "`nüîç V√©rification de la compatibilit√© RTX 4060..." -ForegroundColor Cyan

try {
    $gpuInfo = nvidia-smi --query-gpu=name,memory.total --format=csv,noheader
    
    if ($gpuInfo -match "4060") {
        Write-Host "‚úÖ GPU RTX 4060 d√©tect√© - Configuration id√©ale pour les mod√®les recommand√©s" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è RTX 4060 non d√©tect√©e. Configuration GPU actuelle:" -ForegroundColor Yellow
        Write-Host "$gpuInfo" -ForegroundColor White
        Write-Host "Les performances peuvent varier selon votre GPU" -ForegroundColor Yellow
    }
} catch {
    Write-Host "‚ö†Ô∏è Impossible de d√©tecter le GPU - Assurez-vous que NVIDIA drivers et CUDA sont install√©s" -ForegroundColor Yellow
}

# Point d'entr√©e principal
Write-Host "`nüí° Ce script vous guidera dans l'installation des mod√®les IA optimis√©s pour la RTX 4060" -ForegroundColor Cyan
Write-Host "Les mod√®les seront configur√©s pour une performance optimale avec votre mat√©riel" -ForegroundColor Cyan

# Afficher le menu principal
Show-Menu 