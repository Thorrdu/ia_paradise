# Script d'installation guid√©e de CUDA et cuDNN pour le Paradis IA V2
# Sp√©cifiquement optimis√© pour Windows 11 avec RTX 4060

Write-Host "üöÄ Installation guid√©e de CUDA et cuDNN pour le Paradis IA V2" -ForegroundColor Cyan
Write-Host "Configuration cible : Windows 11, 32-64 Go RAM, GeForce RTX 4060" -ForegroundColor Yellow

# Fonction pour v√©rifier si on est en mode administrateur
function Test-Administrator {
    $user = [Security.Principal.WindowsIdentity]::GetCurrent()
    $principal = New-Object Security.Principal.WindowsPrincipal $user
    return $principal.IsInRole([Security.Principal.WindowsBuiltinRole]::Administrator)
}

# V√©rifier les privil√®ges d'administrateur
if (-not (Test-Administrator)) {
    Write-Host "‚ùå Ce script n√©cessite des privil√®ges d'administrateur pour fonctionner correctement." -ForegroundColor Red
    Write-Host "Veuillez relancer PowerShell en tant qu'administrateur et r√©ex√©cuter ce script." -ForegroundColor Red
    Exit
}

# V√©rifier si CUDA est d√©j√† install√©
function Test-CudaInstallation {
    Write-Host "`nüîç V√©rification de l'installation CUDA existante..." -ForegroundColor Cyan
    
    $cudaInstalled = Test-Path "C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA"
    
    if ($cudaInstalled) {
        try {
            $nvccOutput = nvcc --version
            $nvccVersion = [regex]::Match($nvccOutput, "release (\d+\.\d+)").Groups[1].Value
            
            Write-Host "‚úÖ CUDA $nvccVersion est d√©j√† install√©" -ForegroundColor Green
            
            if ([version]$nvccVersion -lt [version]"11.8") {
                Write-Host "‚ö†Ô∏è Version CUDA d√©tect√©e ($nvccVersion) est inf√©rieure √† la version recommand√©e (11.8)" -ForegroundColor Yellow
                Write-Host "Pour des performances optimales avec PyTorch et TensorFlow, une mise √† jour est recommand√©e" -ForegroundColor Yellow
                return $false
            } else {
                return $true
            }
        } catch {
            Write-Host "‚ö†Ô∏è CUDA semble √™tre install√©, mais nvcc n'est pas disponible dans le PATH" -ForegroundColor Yellow
            return $false
        }
    } else {
        Write-Host "‚ùå CUDA n'est pas install√©" -ForegroundColor Red
        return $false
    }
}

# Guide d'installation CUDA
function Install-Cuda {
    Write-Host "`n‚¨áÔ∏è Installation de CUDA Toolkit 11.8 (recommand√© pour PyTorch/TensorFlow)..." -ForegroundColor Cyan
    
    # V√©rifier si CUDA 11.8 est la version appropri√©e
    Write-Host "Les versions recommand√©es pour les biblioth√®ques d'IA sont :" -ForegroundColor Yellow
    Write-Host "‚Ä¢ CUDA 11.8 - Compatible avec PyTorch 2.0-2.1, TensorFlow 2.12-2.13" -ForegroundColor Yellow
    Write-Host "‚Ä¢ CUDA 12.1 - Compatible avec PyTorch 2.2+, TensorFlow 2.14+" -ForegroundColor Yellow
    
    $cudaVersion = Read-Host "Quelle version de CUDA souhaitez-vous installer? (11.8/12.1) [11.8]"
    
    if ([string]::IsNullOrEmpty($cudaVersion)) {
        $cudaVersion = "11.8"
    }
    
    if ($cudaVersion -eq "11.8") {
        Start-Process "https://developer.nvidia.com/cuda-11-8-0-download-archive?target_os=Windows&target_arch=x86_64"
    } elseif ($cudaVersion -eq "12.1") {
        Start-Process "https://developer.nvidia.com/cuda-12-1-0-download-archive?target_os=Windows&target_arch=x86_64"
    } else {
        Write-Host "‚ùå Version non reconnue. Ouverture de la page de t√©l√©chargement g√©n√©rale..." -ForegroundColor Red
        Start-Process "https://developer.nvidia.com/cuda-downloads"
    }
    
    Write-Host "`n‚ö†Ô∏è Veuillez suivre les instructions d'installation dans votre navigateur:" -ForegroundColor Yellow
    Write-Host "1. S√©lectionnez Windows, x86_64, Windows 11, et le type d'installateur (exe recommand√©)" -ForegroundColor White
    Write-Host "2. T√©l√©chargez et ex√©cutez l'installateur" -ForegroundColor White
    Write-Host "3. Dans l'installateur, choisissez 'Express Installation' pour une configuration standard" -ForegroundColor White
    Write-Host "4. Une fois l'installation termin√©e, red√©marrez votre ordinateur" -ForegroundColor White
    
    Write-Host "`nAppuyez sur une touche une fois l'installation de CUDA termin√©e..." -ForegroundColor Green
    [void][System.Console]::ReadKey($true)
    
    # V√©rifier si l'installation a r√©ussi
    if (Test-CudaInstallation) {
        Write-Host "‚úÖ CUDA a √©t√© install√© avec succ√®s!" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è L'installation de CUDA semble avoir √©chou√© ou n'est pas correctement configur√©e." -ForegroundColor Yellow
        Write-Host "V√©rifiez que CUDA est bien dans votre PATH syst√®me." -ForegroundColor Yellow
    }
}

# Guide d'installation cuDNN
function Install-CuDNN {
    Write-Host "`n‚¨áÔ∏è Installation de cuDNN (Biblioth√®que NVIDIA Deep Neural Network)..." -ForegroundColor Cyan
    
    # V√©rifier la version de CUDA install√©e
    try {
        $nvccOutput = nvcc --version
        $cudaVersion = [regex]::Match($nvccOutput, "release (\d+\.\d+)").Groups[1].Value
    } catch {
        $cudaVersion = "inconnu"
    }
    
    Write-Host "`n‚ö†Ô∏è L'installation de cuDNN n√©cessite un compte NVIDIA Developer gratuit" -ForegroundColor Yellow
    Write-Host "Voici les √©tapes √† suivre:" -ForegroundColor White
    Write-Host "1. Acc√©dez √† la page de t√©l√©chargement de cuDNN (qui va s'ouvrir)" -ForegroundColor White
    Write-Host "2. Cr√©ez un compte ou connectez-vous √† votre compte NVIDIA Developer" -ForegroundColor White
    Write-Host "3. Acceptez les termes du NVIDIA Software License Agreement" -ForegroundColor White
    Write-Host "4. T√©l√©chargez la version de cuDNN compatible avec CUDA $cudaVersion" -ForegroundColor White
    
    Start-Process "https://developer.nvidia.com/cudnn"
    
    Write-Host "`nUne fois le fichier t√©l√©charg√©, suivez ces instructions:" -ForegroundColor Cyan
    Write-Host "1. Extrayez l'archive ZIP t√©l√©charg√©e" -ForegroundColor White
    Write-Host "2. Copiez les fichiers suivants dans les r√©pertoires CUDA correspondants:" -ForegroundColor White
    Write-Host "   ‚Ä¢ Copiez cudnn*.dll du dossier 'bin' vers C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v$cudaVersion\bin" -ForegroundColor White  
    Write-Host "   ‚Ä¢ Copiez cudnn*.h du dossier 'include' vers C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v$cudaVersion\include" -ForegroundColor White
    Write-Host "   ‚Ä¢ Copiez cudnn*.lib du dossier 'lib' vers C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v$cudaVersion\lib\x64" -ForegroundColor White
    
    Write-Host "`nAppuyez sur une touche une fois l'installation de cuDNN termin√©e..." -ForegroundColor Green
    [void][System.Console]::ReadKey($true)
    
    Write-Host "‚úÖ Installation CUDA/cuDNN termin√©e!" -ForegroundColor Green
    Write-Host "Les mod√®les IA du Paradis IA V2 peuvent maintenant exploiter pleinement votre RTX 4060" -ForegroundColor Green
}

# V√©rification des pilotes NVIDIA
function Check-NvidiaDrivers {
    Write-Host "`nüîç V√©rification des pilotes NVIDIA..." -ForegroundColor Cyan
    
    try {
        $nvidiaOutput = nvidia-smi
        
        if ($nvidiaOutput -match "Driver Version: (\d+\.\d+)") {
            $driverVersion = $matches[1]
            Write-Host "‚úÖ Pilote NVIDIA version $driverVersion d√©tect√©" -ForegroundColor Green
            
            if ([version]$driverVersion -lt [version]"530.0") {
                Write-Host "‚ö†Ô∏è Version de pilote ($driverVersion) peut √™tre obsol√®te pour l'IA" -ForegroundColor Yellow
                Write-Host "Une mise √† jour vers la derni√®re version est recommand√©e pour des performances optimales" -ForegroundColor Yellow
                
                $updateDrivers = Read-Host "Souhaitez-vous visiter la page de t√©l√©chargement des pilotes NVIDIA? (O/N) [O]"
                if ($updateDrivers -ne "N" -and $updateDrivers -ne "n") {
                    Start-Process "https://www.nvidia.fr/Download/index.aspx?lang=fr"
                }
            }
        } else {
            Write-Host "‚ö†Ô∏è Impossible de d√©terminer la version du pilote NVIDIA" -ForegroundColor Yellow
        }
    } catch {
        Write-Host "‚ùå Pilotes NVIDIA non d√©tect√©s ou nvidia-smi n'est pas disponible" -ForegroundColor Red
        Write-Host "Veuillez installer les pilotes NVIDIA appropri√©s pour votre RTX 4060" -ForegroundColor Yellow
        
        $installDrivers = Read-Host "Souhaitez-vous visiter la page de t√©l√©chargement des pilotes NVIDIA? (O/N) [O]"
        if ($installDrivers -ne "N" -and $installDrivers -ne "n") {
            Start-Process "https://www.nvidia.fr/Download/index.aspx?lang=fr"
        }
    }
}

# Installation de PyTorch avec CUDA
function Install-PyTorchCuda {
    Write-Host "`nüîß Installation de PyTorch avec support CUDA..." -ForegroundColor Cyan
    
    try {
        # Obtenir la version de CUDA
        $nvccOutput = nvcc --version
        $cudaVersion = [regex]::Match($nvccOutput, "release (\d+\.\d+)").Groups[1].Value
        
        if ([version]$cudaVersion -ge [version]"12.0") {
            Write-Host "Installation de PyTorch avec CUDA 12.1..." -ForegroundColor Yellow
            pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121
        } elseif ([version]$cudaVersion -ge [version]"11.8") {
            Write-Host "Installation de PyTorch avec CUDA 11.8..." -ForegroundColor Yellow
            pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118
        } else {
            Write-Host "‚ö†Ô∏è Version CUDA $cudaVersion non optimale pour PyTorch" -ForegroundColor Yellow
            Write-Host "Installation de PyTorch avec la version CUDA la plus proche disponible (11.8)..." -ForegroundColor Yellow
            pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118
        }
        
        # V√©rifier l'installation
        Write-Host "V√©rification de l'installation de PyTorch avec CUDA..." -ForegroundColor Yellow
        python -c "import torch; print('PyTorch version:', torch.__version__); print('CUDA disponible:', torch.cuda.is_available()); print('P√©riph√©rique CUDA:', torch.cuda.get_device_name(0) if torch.cuda.is_available() else 'None')"
        
        Write-Host "‚úÖ PyTorch avec support CUDA install√© avec succ√®s" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå Erreur lors de l'installation de PyTorch: $_" -ForegroundColor Red
    }
}

# Menu principal
function Show-Menu {
    Write-Host "`n=== üõ†Ô∏è MENU D'INSTALLATION CUDA/cuDNN ===" -ForegroundColor Cyan
    Write-Host "1. V√©rifier les pilotes NVIDIA" -ForegroundColor White
    Write-Host "2. Installer/Mettre √† jour CUDA Toolkit" -ForegroundColor White
    Write-Host "3. Guide d'installation cuDNN" -ForegroundColor White
    Write-Host "4. Installer PyTorch avec support CUDA" -ForegroundColor White
    Write-Host "5. Quitter" -ForegroundColor White
    Write-Host "===================================" -ForegroundColor Cyan
    
    $choice = Read-Host "Choisissez une option (1-5)"
    
    switch ($choice) {
        "1" { Check-NvidiaDrivers; Show-Menu }
        "2" { Install-Cuda; Show-Menu }
        "3" { Install-CuDNN; Show-Menu }
        "4" { Install-PyTorchCuda; Show-Menu }
        "5" { 
            Write-Host "`nüéâ Installation termin√©e! Votre syst√®me est maintenant pr√™t pour le Paradis IA V2." -ForegroundColor Green
            Write-Host "Retournez au script d'installation principal pour poursuivre la configuration du Paradis IA." -ForegroundColor Yellow
            Exit
        }
        default { 
            Write-Host "‚ùå Option invalide, veuillez r√©essayer." -ForegroundColor Red
            Show-Menu
        }
    }
}

# Point d'entr√©e principal
Write-Host "`nüí° Ce script vous guidera dans l'installation et la configuration de CUDA et cuDNN," -ForegroundColor Cyan
Write-Host "composants essentiels pour que votre RTX 4060 puisse ex√©cuter efficacement les mod√®les d'IA." -ForegroundColor Cyan

Write-Host "`nRecommandations pour le Paradis IA V2 :" -ForegroundColor Yellow
Write-Host "‚Ä¢ CUDA 11.8+ : Compatible avec tous les mod√®les d'IA du Paradis IA" -ForegroundColor White
Write-Host "‚Ä¢ cuDNN correspondant √† votre version CUDA" -ForegroundColor White
Write-Host "‚Ä¢ Pilotes NVIDIA r√©cents (530+)" -ForegroundColor White

# Commence par v√©rifier les pilotes, puis montre le menu
Check-NvidiaDrivers
Show-Menu 